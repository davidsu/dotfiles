snippet #! "shebang" b
#!/usr/bin/env node
endsnippet

snippet writeFile 
require('fs').writeFileSync('/tmp/${1:${VISUAL:a.json}}', ${2:${VISUAL:js}})
endsnippet
snippet wf "fs.writeFile"
require('fs').writeFileSync('/tmp/${1:${VISUAL:a.json}}', ${2:${VISUAL:js}})
endsnippet

snippet : "key: value"
${1:key}: ${2:value}
endsnippet

snippet fun "function... or visual<c-s>"
function ${1:function_name}(${2}) {
	${0:${VISUAL:'--CODE--'}}
}
endsnippet

snippet iife 
(function () {
${1}
})()
endsnippet

snippet timeout "setTimeout... or visual<c-s>"
setTimeout(function () {
	${0:${VISUAL:'--CODE--'}}
}, ${1})
endsnippet

snippet des "describe('',()=>{}"
describe('${1}', () => {
})
endsnippet

snippet it "it('',()=>{}"
it('${1}', () => {
})
endsnippet

# Flow control
# if
snippet if "if (condition) { ... }"
if (${1:true}) {
	${0:${VISUAL:'--CODE--'}}
}
endsnippet
# if ... else
snippet ife "if (condition) { ... } else { ... }"
if (${1:true}) {
	${0:${VISUAL:'--CODE--'}}
} else {
	${2}
}
endsnippet

# FUNCTION
snippet afe "() => $ret"
(${1}) => ${0:${VISUAL:'--retval--'}}
endsnippet

snippet () "() => $ret"
(${1}) => ${0:${VISUAL:'--retval--'}}
endsnippet

snippet afb "() => {}"
(${1}) => {
	${0:${VISUAL:'--CODE--'}
}
endsnippet

snippet (){ "() => {}"
(${1}) => {
	${0:${VISUAL:'--CODE--'}}
}
endsnippet
# JSON
snippet jsons "JSON.stringify" w
JSON.stringify(${0:${VISUAL:#object}}, null, 4)
endsnippet

# Debugging
snippet de
debugger;
endsnippet

#CONSOLE NODE+BROWSER
snippet cl "console.log"
console.log(${VISUAL}$0)
endsnippet

snippet clog "console.log" w
console.log(${VISUAL}$0)
endsnippet

snippet cjsons "console.log(JSON.stringify)" w
console.log('${1:${VISUAL:label}}', JSON.stringify(${0:${VISUAL}}, null, 4))
endsnippet

snippet ctime "console.time ... console.timeEnd"
console.time("${1:label}");
${0:${VISUAL:'--CODE--'}}
console.timeEnd("$1");
endsnippet

snippet ca "console.assert"
console.assert(${1:expression}, ${0:obj});
endsnippet

snippet ce "console.error"
console.error(${VISUAL}$0);
endsnippet

snippet cw "console.warn"
console.warn(${VISUAL}$0);
endsnippet

snippet ct "console.trace"
console.trace(${0:label});
endsnippet

#CONSOLE BROWSER ONLY
snippet ci "console.info"
console.info(${VISUAL}$0);
endsnippet

snippet ccount "console.count -- https://developer.mozilla.org/en-US/docs/Web/API/Console/count"
console.count(${0:${VISUAL:#label}})
endsnippet

snippet cd "console.debug"
console.debug(${VISUAL}$0);
endsnippet

snippet ctimestamp "console.timeStamp"
console.timeStamp("${1:label}");
endsnippet

snippet cclear "console.clear"
console.clear();
endsnippet

snippet cdir "console.dir"
console.dir(${0:obj});
endsnippet

snippet cdirx "console.dirxml"
console.dirxml(${1:object});
endsnippet

snippet cgroup "console.group"
console.group("${1:label}");
${0:${VISUAL:'--CODE--'}}
console.groupEnd();
endsnippet

snippet cgroupc "console.groupCollapsed"
console.groupCollapsed("${1:label}");
${0:${VISUAL:'--CODE--'}}
console.groupEnd();
endsnippet

snippet cprof "console.profile"
console.profile("${1:label}");
${0:${VISUAL:'--CODE--'}}
console.profileEnd();
endsnippet

snippet ctable "console.table"
console.table(${1:"${2:value}"});
endsnippet 

snippet cred
console.log('\x1b[31m%s\x1b[0m', ${1})
endsnippet

snippet cyellow
console.log('\x1b[33m%s\x1b[0m', ${1})
endsnippet

snippet cwhite
console.log('\x1b[32m%s\x1b[0m', ${1})
endsnippet

snippet cgreen
console.log('%c${1}', 'font-weight:bold;color:green;')
endsnippet

snippet cblue
console.log('%c${1}', 'font-weight:bold;color:blue;')
endsnippet

snippet cpurple
console.log('%c${1}', 'font-weight:bold;color:purple;')
endsnippet

snippet corange
console.log('%c${1}', 'font-weight:bold;color:orange;')
endsnippet
